[keys]
  
  ######################
  # Software shortcuts #
  ######################
  [key] mod = {"Super"} key = "Return" func = "spawn" cmd = "lxterminal || urxvt || xterm" [/key]
  [key] mod = {"Super"} key = "w" func = "spawn" cmd = "firefox" [/key]
  [key] mod = {"Super"} key = "t" func = "spawn" cmd = "thunderbird" [/key]
  [key] mod = {"Super"} key = "e" func = "spawn" cmd = "lxterminal -e ranger" [/key]
  [key] mod = {"Super"} key = "r" func = "spawn" cmd = "evince" [/key]

  ## Cmus
  [key] mod = {"Super"} key = "a" func = "spawn" cmd = "lxterminal -e cmus" [/key]
  [key] mod = {"Super","Alt"} key = "a" func = "spawn" cmd = "cmus-remote -u" [/key]
  [key] mod = {"Super","Shift"} key = "a" func = "spawn" cmd = "cmus-remote -n" [/key]
  [key] mod = {"Super","Control"} key = "a" func = "spawn" cmd = "cmus-remote -r" [/key]

  # Sound Control
  [key] mod = {"Super"} key = "KP_Subtract" func = "spawn" cmd = "amixer set Master 5%-" [/key]
  [key] mod = {"Super"} key = "KP_Add" func = "spawn" cmd = "amixer set Master 5%+" [/key]
  [key] mod = {"Super"} key = "KP_Divide" func = "spawn" cmd = "amixer set Master mute" [/key]
  [key] mod = {"Super"} key = "KP_Multiply" func = "spawn" cmd = "amixer set Master unmute" [/key]

  # Take a screenshot.
  [key] key = "Print" func = "spawn" cmd = "scrot '%Y-%m-%d-%H%M%S_$wx$h.png' -e 'mkdir -p ~/shots && mv $f ~/shots/'" [/key]

  # Lock the screen.
  [key] mod = {"Super"} key = "l" func = "spawn" cmd = "xscreensaver-command --lock" [/key]

  
  #################
  # WMFS commands #
  #################
  [key] mod = {"Control", "Super", "Alt"} key = "q" func = "quit" [/key]
  [key] mod = {"Control", "Super", "Alt"} key = "r" func = "reload" [/key]

  # Toggle client free/tile
  [key] mod = {"Super"} key = "f" func = "client_toggle_free" [/key]

  # Launcher
  [key] mod = {"Super"} key = "p" func = "launcher" cmd = "exec" [/key]
  # Man launcher
  [key] mod = {"Super"} key = "m" func = "launcher" cmd = "launcher_man" [/key]

  [key] mod = {"Super"} key = "q" func = "client_close" [/key]

  ####################
  # Tag manipulation #
  ####################
  [key] mod = {"Super"} key = "F1" func = "tag_set" cmd = "0" [/key]
  [key] mod = {"Super"} key = "F2" func = "tag_set" cmd = "1" [/key]
  [key] mod = {"Super"} key = "F3" func = "tag_set" cmd = "2" [/key]
  [key] mod = {"Super"} key = "F4" func = "tag_set" cmd = "3" [/key]
  [key] mod = {"Super"} key = "F5" func = "tag_set" cmd = "4" [/key]
  [key] mod = {"Super"} key = "F6" func = "tag_set" cmd = "5" [/key]
  [key] mod = {"Super"} key = "F7" func = "tag_set" cmd = "6" [/key]
  [key] mod = {"Super"} key = "F8" func = "tag_set" cmd = "7" [/key]
  [key] mod = {"Super"} key = "F9" func = "tag_set" cmd = "8" [/key]
  [key] mod = {"Super"} key = "F10" func = "tag_set" cmd = "9" [/key]
  [key] mod = {"Super"} key = "F11" func = "tag_set" cmd = "10" [/key]
  [key] mod = {"Super"} key = "F12" func = "tag_set" cmd = "11" [/key]

  [key] mod = {"Super", "Alt"} key = "F1" func = "tag_client" cmd = "0" [/key]
  [key] mod = {"Super", "Alt"} key = "F2" func = "tag_client" cmd = "1" [/key]
  [key] mod = {"Super", "Alt"} key = "F3" func = "tag_client" cmd = "2" [/key]
  [key] mod = {"Super", "Alt"} key = "F4" func = "tag_client" cmd = "3" [/key]
  [key] mod = {"Super", "Alt"} key = "F5" func = "tag_client" cmd = "4" [/key]
  [key] mod = {"Super", "Alt"} key = "F6" func = "tag_client" cmd = "5" [/key]
  [key] mod = {"Super", "Alt"} key = "F7" func = "tag_client" cmd = "6" [/key]
  [key] mod = {"Super", "Alt"} key = "F8" func = "tag_client" cmd = "7" [/key]

  [key] mod = {"Super", "Alt"} key = "KP_Subtract" func = "tag_del" [/key]
  [key] mod = {"Super", "Alt"} key = "KP_Add" func = "tag_new" [/key]

  [key] mod = {"Super"} key = "Next" func = "tag_next" [/key]
  [key] mod = {"Super"} key = "Prior"  func = "tag_prev" [/key]

  # tag function: cmd = nameofthetag
  #[key] mod = {"Super"} key = "z" func = "tag" cmd = "2" [/key]

  #[key] mod = {"Control"} key = "Up"  func = "screen_next" [/key]
  #[key] mod = {"Control"} key = "Down" func = "screen_prev" [/key]

  # Focus next / prev client and next / prev tabbed client
  [key] mod = { "Super" }            key = "Tab" func = "client_focus_next" [/key]
  [key] mod = { "Super", "Shift" }   key = "Tab" func = "client_focus_prev" [/key]
  [key] mod = { "Super", "Alt" }          key = "Tab" func = "client_focus_next_tab" [/key]
  [key] mod = { "Super", "Alt", "Shift" } key = "Tab" func = "client_focus_prev_tab" [/key]

  # Focus next client with direction
  [key] mod = {"Super"} key = "Left" func = "client_focus_left"   [/key]
  [key] mod = {"Super"} key = "Right" func = "client_focus_right"  [/key]
  [key] mod = {"Super"} key = "Up" func = "client_focus_top"    [/key]
  [key] mod = {"Super"} key = "Down" func = "client_focus_bottom" [/key]

  # swap next client with direction:
  [key] mod = {"Super", "Alt"} key = "Left" func = "client_swap_left"   [/key]
  [key] mod = {"Super", "Alt"} key = "Right" func = "client_swap_right"  [/key]
  [key] mod = {"Super", "Alt"} key = "Up" func = "client_swap_top"    [/key]
  [key] mod = {"Super", "Alt"} key = "Down" func = "client_swap_bottom" [/key]

  # Resize selected tiled client with direction
  [key] mod = {"Super", "Shift"}   key = "Left" func = "client_resize_left"   cmd = "20" [/key]
  [key] mod = {"Super", "Shift"}   key = "Right" func = "client_resize_left"   cmd = "-20" [/key]
  [key] mod = {"Super", "Shift"}   key = "Up" func = "client_resize_top"    cmd = "20" [/key]
  [key] mod = {"Super", "Shift"}   key = "Down" func = "client_resize_top"    cmd = "-20" [/key]
  [key] mod = {"Super", "Control"} key = "Left" func = "client_resize_right"  cmd = "-20" [/key]
  [key] mod = {"Super", "Control"} key = "Right" func = "client_resize_right"  cmd = "20" [/key]
  [key] mod = {"Super", "Control"} key = "Up" func = "client_resize_bottom" cmd = "-20" [/key]
  [key] mod = {"Super", "Control"} key = "Down" func = "client_resize_bottom" cmd = "20" [/key]

  # Tabbing command
  [key] mod = {"Alt", "Super"} key = "h" func = "client_tab_left"   [/key]
  [key] mod = {"Alt", "Super"} key = "l" func = "client_tab_right"  [/key]
  [key] mod = {"Alt", "Super"} key = "k" func = "client_tab_top"    [/key]
  [key] mod = {"Alt", "Super"} key = "j" func = "client_tab_bottom" [/key]
  [key] mod = {"Alt", "Super"} key = "u" func = "client_untab" [/key]
  #[key] mod = {"Super"}        key = "t" func = "client_tab_next_opened" [/key]


  ##########
  # Unused #
  ##########
  # Layout manipulation
  #[key] mod = {"Super"}          key = "m" func = "layout_vmirror" [/key]
  #[key] mod = {"Super", "Shift"} key = "m" func = "layout_hmirror" [/key]
  # [key] mod = {"Super"}          key = "r" func = "layout_rotate_right" [/key]
  # [key] mod = {"Super", "Shift"} key = "r" func = "layout_rotate_left" [/key]

  # [key] mod = {"Control", "Super", "Alt"} key = "h" func = "layout_integrate_left" [/key]
  # [key] mod = {"Control", "Super", "Alt"} key = "j" func = "layout_integrate_bottom" [/key]
  # [key] mod = {"Control", "Super", "Alt"} key = "k" func = "layout_integrate_top" [/key]
  # [key] mod = {"Control", "Super", "Alt"} key = "l" func = "layout_integrate_right" [/key]

  # Layout set historic travelling function (TESTING)
  # [key] mod = {"Super"} key = "o" func = "layout_prev_set" [/key]
  # [key] mod = {"Super", "Shift"} key = "o" func = "layout_next_set" [/key]

[/keys]
