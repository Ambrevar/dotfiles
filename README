################################################################################
#                           Unix Home Configuration                            #
#                               Author: Ambrevar                               #
#                               Date: 2012-08-07                               #
################################################################################

Synopsis
********
This repository contains configuration files for various Unix-programs.
Target distribution: Arch Linux (might work for most Unices as well)

Generic Comments
****************

The only purpose is to be a source of inspiration. Examples are always a good
technical support. (Especially for applications that do not provide examples in
their documentation.)  There is no use in blind-copying the content of any file
into your personal home folder. At best it might break things.

In case you still want to copy some files -- for quick and dirty testing purpose
-- do not forget that most of the files are in hidden folders.  Also note that
in some shells, the '*' joker will NOT match hidden files, that is

        cp -r source-dir/* dest-dir/

will copy non-hidden folders only.  To match all folders, use the following
joker instead:

        cp -r source-dir/{.*,*} dest-dir/   # zsh
        cp -r source-dir/{.??*,*} dest-dir/ # bash

Still, the solution for bash is not perfect as it affects 3 characters files
only. A more convenient solution:

      # bash only.
      shopt -s dotglob
      cp -r source-dir/* dest-dir/


Some applications will need extra dependencies other than the default ones. You
might have a look at the .arch-pkg-explicit* files to see what software I've
been using.

Final word: do not forget to read the manpages!

################################################################################

Awesome
*******
Extra deps: Vicious

Configuration is very close to the default one, which mostly fits my needs.
Most of the work I've done is for the status bar, but since I'm using the
Vicious plugin, it is quite straightforward.

Emacs
*****
Extra deps: auctex, emacs-lua-mode, emacs-mediawiki, emacs-yasnippet.

Some keybindings and custom colors (for 256-colors terminals). Extended file
support (shell files, mutt mails, Arch Linux PKGBUILDs). Some customization --
columns, kill whole line, etc. Some plugins customization too (LaTeX, Mediawiki,
snippets). Some custom functions (duplicate line, unfill-paragraph, etc.).

Luakit
******
Some custom bindings, download location, search engines, etc.
Functional Adblock script. Script+Plugin toggle.

Mutt
****
Compile options: IMAP and SMTP support.
Extra deps: antiword, fortune, sxiv, w3m.

This one is not easy to get into it. I managed to get multiple accounts with
pgp-encrypted passwords working, which means there is no plain password stored
on the disk. As a result, I just get prompted for a main password on Mutt
startup, then everything works out of the box.

I use GPG for password management because it is a Mutt dependency anyway. It
could also work well with pwsafe or other tools.

I'm using embedded IMAP and SMTP services -- you must provide the required
compilation options.

Some customization: custom index view, good Emacs integration (see .emacs),
custom theme (matches Emacs colors), various tweaks.

URxvt has an URL support that works also for Mutt. For other terminals, you
might consider using the 'urlview' plugin for Mutt.

Ranger
******
Extra deps: antiword, atool, highlight, img2txt, mediainfo, pdftotext, w3m.

Custom bindings, file association, tweaked a few options.

Scripts
*******

.network: network setup. Works with wpa_supplicant. May replace any network
          manager.

.homeinit: initialize a new home configuration, i.e. get needed files, create
           symlinks, etc.

.save: generates a home configuration archive.

Shell
*****
Target: zsh, bash

Probably the most interesting part here. A lot of stuff: aliases, functions,
shell options, etc.

Please note that this config is mainly intended -- and tested -- for zsh. It
should be mostly bash-compatible though.  When incompabilities have been
encountered, it has been reported into the configuration files. Hence the shared
folder .shell.d/, whose files get sourced by both bash and zsh.  Bash-specific
and zsh-specific options are in dedicated files ending with the apropriate shell
name.

URxvt
*****
Extra deps: Muennich's perl extensions (keyboard-select, clipboard)

Custom font and colors, no scroll bar, url-matcher, clipboard, and
keyboard-select.

Vim
***
I've only been a casual Vim user, so do not expect too much from it.

################################################################################
Known issues
************

Emacs: some colors do not work as intended.

Ranger: if editor is 'emacsclient -t -a""', it will not show up if emacs daemon
is not running.

Shell: some custom functions would need auto-completion.

Zathura: app will hang forever sometimes (when document is being regenerated, or
when launched from Ranger).

################################################################################
Complete applist
****************

aalib
antiword
asciidoc
astyle
atool
awesome
awk
bashmount
bc
cal
calc
catdvi
ccrypt
chrpath
cmus
column
comm
cppcheck
cut
dash
diff
doxygen
dropbox
dtach
dvtm
emacs
fbpdf
fbv
fdisk
feh
ffmpeg
file
fmt
fortune
gcolor2
gdb
gimp
gnumeric
gnuplot
gpicview
graphicsmagick
grep
groff
handbrake
hdparm
help2man
highlight
htop
imagemagick
indent
inkscape
irssi
latex2html
latex2rtf
lrzip
lshw
ltrace
luakit
mediainfo
mencoder
mercurial
mkfs
mkvtoolnix
movgrab
mplayer2
mutt
nasm
ncdu
ngrep
nmap
numlockx
octave
od
okular
openshot
openssh
p7zip
pari
parted
patch
pidgin
poppler
pwgen
pwsafe
ranger
re2c
rsync
rtorrent
rxvt-unicode
scrot
sdparm
sed
shred
slock
sort
splint
strace
submarine
sudo
sxiv
syslinux
task
tcc
tcpdump
texi2html
texinfo
texlive
tig
trash-cli
tree
udiskie
upx
valgrind
vim
vlock
w3m
weechat
wipe
wmfs
wv
x264
xclip
xsel
yasm
zathura
zsh
