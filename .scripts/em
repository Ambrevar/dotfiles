#!/bin/sh

if [ "$1" = "-h" ]; then
	cat <<EOF>&2
Usage: ${0##*/} [OPTIONS] [FILES]

Start emacsclient in terminal or in X window if possible. If no server is
running, it is started with the '--no-site-file' parameter.

The calling script can have different names:

- emc: the Emacs instance is opened in the current terminal.
- emw: if graphical, tell the client to wait.

All emacsclient(1) options are supported:

$(emacsclient --help)

Extra options:

  --kill: Shutdown Emacs daemon.

EOF
	exit
fi

if [ "$1" = "--kill" ]; then
	emacsclient -e '(kill-emacs)'
	exit
fi

## Emacs will start in console mode if it cannot start in graphical mode or if
## called from "emc".
if [ "${0##*/}" = "emc" ]; then
	param="-t"
else
	param="-c"
	## Emacs should always wait unless running graphical and "emw" was not called.
	if [ "${0##*/}" != "emw" ] && [ "$(emacs --batch -Q --eval='(if (fboundp '"'"'tool-bar-mode) (message "X") (message "TTY"))' 2>&1)" = X ] && [ -n "$DISPLAY" ]; then
		param="$param -n"
	fi
fi

## Simple invokation:
##
## emacsclient $param -a "" "$@"
##
## The '-a ""' parameter starts "emacs --daemon", but we want to skip the "site
## files", i.e. the extra init files some distros try to force into Emacs. To
## achieve this we have to start the daemon manually.
socket="/tmp/emacs$(id -u)/server"
[ ! -e "$socket" ] && emacs --daemon --no-site-file
emacsclient $param "$@"

## If Emacs was forcefully closed or crashed, the dead socket will be left
## behind and Emacs cannot reset it automatically without the '-a ""' parameter.
if [ $? -ne 0 ]; then
	echo >&2 "Removing existing socket and trying again."
	rm "$socket"
	[ ! -e "$socket" ] && emacs --daemon --no-site-file
	emacsclient $param "$@"
fi
