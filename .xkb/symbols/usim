//------------------------------------------------------------------------------
// XKB us improved
//------------------------------------------------------------------------------
//
// Description: This keyboard layout is based on Xorg's "us" and inspired by
// "us(intl)". Caps Lock is Ctrl and LShift+RShift is Caps Lock. For best
// vi-style experience, set the new Ctrl to be Esc when not used as a modifier.
//
// User setup: run
//
//   $ xkbcomp -I/path/ $thisfile $DISPLAY`
//
// /path/ must contain a subfolder "symbols" with the "usim" file inside.
//
// System setup: copy the "usim" file to "/usr/{local/,}share/X11/xkb/symbols". You
// can use it by selecting the "usim" layout from Xorg configuration file, or by
// issuing the following command:
//
//   $ setxkbmap usim
//
// ┏━━━━━━┓
// ┃      ┃
// ┃Esc   ┃
// ┡━━━━━┯┹────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┲━━━━━━━━━┓
// │ ~ ~ │ ! ¡ │ @ ˝ │ # ¯ │ $ ¤ │ % ¢ │ ^ ^ │ & ¼ │ * ¾ │ ( ˘ │ ) ÷ │ _ × │ + ± ┃ ⌫ Back  ┃
// │ ` ` │ 1 ¹ │ 2 ² │ 3 ³ │ 4 £ │ 5 € │ 6 ¥ │ 7 ½ │ 8 „ │ 9 “ │ 0 ” │ - ⋅ │ = ≠ ┃  space  ┃
// ┢━━━━━┷━┱───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┺━┳━━━━━━━┫
// ┃       ┃ Q À │ W È │ E É │ R ® │ T ™ │ Y Ù │ U Ú │ I Í │ O Ó │ P Å │ { ‘ │ } ’ ┃ Enter ┃
// ┃Tab ↹  ┃ q à │ w è │ e é │ r ® │ t © │ y ù │ u ú │ i í │ o ó │ p å │ [ « │ ] » ┃   ⏎   ┃
// ┣━━━━━━━┻┱────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┺┓      ┃
// ┃        ┃ A Á │ S § │ D Â │ F Ê │ G Î │ H Ô │ J Û │ K Œ │ L Æ │ : ° │ " ¨ │ | ¦ ┃      ┃
// ┃Ctrl    ┃ a á │ s ß │ d â │ f ê │ g î │ h ô │ j û │ k œ │ l æ │ ; ° │ ' ´ │ \ ¬ ┃      ┃
// ┣━━━━━━━┳┹────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┲┷━━━━━┻━━━━━━┫
// ┃       ┃ > ≥ │ Z Ä │ X Ë │ C Ï │ V Ö │ B Ü │ N Ñ │ M Ø │ < Ç │ > µ │ ? ¿ ┃             ┃
// ┃Shift ⇧┃ < ≤ │ z ä │ x ë │ c ï │ v ö │ b ü │ n ñ │ m ø │ , ç │ . … │ / ¶ ┃Shift ⇧      ┃
// ┣━━━━━━━╋━━━━━┷━┳━━━┷━━━┱─┴─────┴─────┴─────┴─────┴─────┴───┲━┷━━━━━╈━━━━━┻━┳━━━━━━━┳━━━┛
// ┃       ┃       ┃       ┃ ␣            Non-breaking space ⍽ ┃       ┃       ┃       ┃
// ┃Ctrl   ┃Meta   ┃Alt    ┃ ␣ Space                         ⍽ ┃AltGr ⇮┃Menu   ┃Ctrl   ┃
// ┗━━━━━━━┻━━━━━━━┻━━━━━━━┹───────────────────────────────────┺━━━━━━━┻━━━━━━━┻━━━━━━━┛

partial alphanumeric_keys xkb_symbols "usim" {

	name[Group1]= "English international with dead keys extended";

	// Alphanumeric section
	key <TLDE> { [ grave, asciitilde,      dead_grave,           dead_tilde       ] };
	key <AE01> { [ 1,     exclam,          onesuperior,          exclamdown       ] };
	key <AE02> { [ 2,     at,              twosuperior,          dead_doubleacute ] };
	key <AE03> { [ 3,     numbersign,      threesuperior,        dead_macron      ] };
	key <AE04> { [ 4,     dollar,          sterling,             currency         ] };
	key <AE05> { [ 5,     percent,         EuroSign,             cent             ] };
	key <AE06> { [ 6,     asciicircum,     yen,                  dead_circumflex  ] };
	key <AE07> { [ 7,     ampersand,       onehalf,              onequarter       ] };
	key <AE08> { [ 8,     asterisk,        doublelowquotemark,   threequarters    ] };
	key <AE09> { [ 9,     parenleft,       leftdoublequotemark,  dead_breve       ] };
	key <AE10> { [ 0,     parenright,      rightdoublequotemark, division         ] };
	key <AE11> { [ minus, underscore,      0x10022C5,            multiply         ] };
	key <AE12> { [ equal, plus,            notequal,             plusminus        ] };

	key <AD01> { [ q,            Q,          agrave,         Agrave               ] };
	key <AD02> { [ w,            W,          egrave,         Egrave               ] };
	key <AD03> { [ e,            E,          eacute,         Eacute               ] };
	key <AD04> { [ r,            R,          registered,     registered           ] };
	key <AD05> { [ t,            T,          copyright,      trademark            ] };
	key <AD06> { [ y,            Y,          ugrave,         Ugrave               ] };
	key <AD07> { [ u,            U,          uacute,         Uacute               ] };
	key <AD08> { [ i,            I,          iacute,         Iacute               ] };
	key <AD09> { [ o,            O,          oacute,         Oacute               ] };
	key <AD10> { [ p,            P,          aring,          Aring                ] };
	key <AD11> { [ bracketleft,  braceleft,  guillemotleft,  leftsinglequotemark  ] };
	key <AD12> { [ bracketright, braceright, guillemotright, rightsinglequotemark ] };

	key <AC01> { [ a,          A,        aacute,      Aacute         ] };
	key <AC02> { [ s,          S,        ssharp,      section        ] };
	key <AC03> { [ d,          D,        acircumflex, Acircumflex    ] };
	key <AC04> { [ f,          F,        ecircumflex, Ecircumflex    ] };
	key <AC05> { [ g,          G,        icircumflex, Icircumflex    ] };
	key <AC06> { [ h,          H,        ocircumflex, Ocircumflex    ] };
	key <AC07> { [ j,          J,        ucircumflex, Ucircumflex    ] };
	key <AC08> { [ k,          K,        oe,          OE             ] };
	key <AC09> { [ l,          L,        ae,          AE             ] };
	key <AC10> { [ semicolon,  colon,    degree,      dead_abovering ] };
	key <AC11> { [ apostrophe, quotedbl, dead_acute,  dead_diaeresis ] };

	key <AB01> { [ z,         Z,        adiaeresis, Adiaeresis   ] };
	key <AB02> { [ x,         X,        ediaeresis, Ediaeresis   ] };
	key <AB03> { [ c,         C,        idiaeresis, Idiaeresis   ] };
	key <AB04> { [ v,         V,        odiaeresis, Odiaeresis   ] };
	key <AB05> { [ b,         B,        udiaeresis, Udiaeresis   ] };
	key <AB06> { [ n,         N,        ntilde,     Ntilde       ] };
	key <AB07> { [ m,         M,        oslash,     Ooblique     ] };
	key <AB08> { [ comma,     less,     ccedilla,   Ccedilla     ] };
	key <AB09> { [ period,    greater,  0x1002026,  mu           ] };
	key <AB10> { [ slash,     question, paragraph,  questiondown ] };
	key <BKSL> { [ backslash, bar,      notsign,    brokenbar    ] };

	key <SPCE> { [ space, space,  nobreakspace,  nobreakspace     ] };
	key <LSGT> { [ less, greater, lessthanequal, greaterthanequal ] };

	include "level3(ralt_switch)"
	include "ctrl(nocaps)"
	include "shift(both_capslock)"
};
